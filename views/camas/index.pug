extends ../layout

block content
<<<<<<< HEAD
  .card.shadow-sm.my-4
    .card-header.py-3
      .d-flex.justify-content-between.align-items-center
        h1.h4.mb-0 Gestión de Camas
        a.btn.btn-primary(href="/camas/nuevo")
          i.bi.bi-plus-lg.me-1
          | Nueva Cama
    .card-body
      if camas.length === 0
        .alert.alert-info.mb-0 No hay camas registradas en el sistema.
      else
        .table-responsive
          table.table.table-striped.table-hover.align-middle
            thead.table-light
              tr
                th ID
                th Habitación
                th Ala
                th Número
                th Estado
                th Género Asignado
                th Paciente Asignado
                th.text-center Acciones
            tbody
              each cama in camas
                tr
                  td #{cama.id_cama}
                  td #{cama.habitacion ? cama.habitacion.numero : 'N/A'}
                  td #{cama.habitacion && cama.habitacion.ala ? cama.habitacion.ala.nombre : 'N/A'}
                  td #{cama.numero}
                  td
                    - const estadoClass = cama.estado === 'Libre' ? 'bg-success' : cama.estado === 'Ocupada' ? 'bg-danger' : cama.estado === 'En Limpieza' ? 'bg-warning text-dark' : 'bg-secondary'
                    span(class=`badge ${estadoClass}`) #{cama.estado}
                  td
                    if cama.genero_asignado
                      | #{cama.genero_asignado === 'M' ? 'Masculino' : 'Femenino'}
                    else
                      span.text-muted Mixto/Individual
                  td
                    if cama.asignaciones && cama.asignaciones.length > 0 && cama.asignaciones[0].admision && cama.asignaciones[0].admision.paciente
                      a(href="/admisiones/detalles/" + cama.asignaciones[0].admision.id_admision) #{cama.asignaciones[0].admision.paciente.nombre} #{cama.asignaciones[0].admision.paciente.apellido}
                    else
                      span.text-muted N/A
                  td.text-center
                    .d-inline-flex.gap-2
                      a.btn.btn-sm.btn-outline-primary(href="/camas/editar/" + cama.id_cama) Editar
                      form(action="/camas/eliminar/" + cama.id_cama, method="POST", onsubmit="return confirm('¿Está seguro de eliminar esta cama? Esto no es posible si está asignada.');")
                        button.btn.btn-sm.btn-outline-danger(type="submit") Eliminar
=======
  .max-w-7xl.mx-auto.bg-white.p-8.rounded-2xl.shadow-xl
    .flex.justify-between.items-center.mb-6
      h1.text-3xl.font-bold.text-blue-900 Gestión de Camas
      a(href="/camas/nuevo", class="bg-blue-600 hover:bg-blue-700 transition-colors duration-300 text-white font-semibold py-2 px-4 rounded-md shadow-md") Nueva Cama

    if camas.length === 0
      p.text-gray-600.mt-4 No hay camas registradas en el sistema.
    else
      .overflow-x-auto.mt-6
        table.min-w-full.bg-white.border.border-gray-200.rounded-lg.shadow-sm
          thead.bg-blue-100.text-gray-700.uppercase.text-sm
            tr
              th.py-3.px-4.text-left.font-semibold ID
              th.py-3.px-4.text-left.font-semibold Habitación
              th.py-3.px-4.text-left.font-semibold Ala
              th.py-3.px-4.text-left.font-semibold Número de Cama
              th.py-3.px-4.text-left.font-semibold Estado
              th.py-3.px-4.text-left.font-semibold Género Asignado
              th.py-3.px-4.text-left.font-semibold Paciente Asignado
              th.py-3.px-4.text-center.font-semibold Acciones
          tbody.divide-y.divide-gray-200
            each cama in camas
              tr(class="hover:bg-gray-50 transition-colors duration-100")
                td.py-3.px-4.whitespace-nowrap.text-sm.text-gray-800 #{cama.id_cama}
                td.py-3.px-4.whitespace-nowrap.text-sm.text-gray-700 #{cama.habitacion ? cama.habitacion.numero : 'N/A'}
                td.py-3.px-4.whitespace-nowrap.text-sm.text-gray-700 #{cama.habitacion && cama.habitacion.ala ? cama.habitacion.ala.nombre : 'N/A'}
                td.py-3.px-4.whitespace-nowrap.text-sm.font-medium.text-gray-900 #{cama.numero}
                td.py-3.px-4.whitespace-nowrap.text-sm.font-semibold
                  span(class=['px-2', 'inline-flex', 'text-xs', 'leading-5', 'font-semibold', 'rounded-full', cama.estado === 'Libre' ? 'bg-green-100 text-green-800' : cama.estado === 'Ocupada' ? 'bg-red-100 text-red-800' : 'bg-yellow-100 text-yellow-800']) #{cama.estado}
                td.py-3.px-4.whitespace-nowrap.text-sm.text-gray-700
                  if cama.genero_asignado
                    | #{cama.genero_asignado === 'M' ? 'Masculino' : 'Femenino'}
                  else
                    | Mixto/Individual
                td.py-3.px-4.whitespace-nowrap.text-sm.text-gray-700
                  - const asignacionActiva = cama.asignaciones && cama.asignaciones.find(a => a.admision && a.admision.estado_admision === 'Activa');
                  if asignacionActiva && asignacionActiva.admision.paciente
                    a(href=`/admisiones/detalles/${asignacionActiva.admision.id_admision}`, class="text-blue-600 hover:underline") #{asignacionActiva.admision.paciente.nombre} #{asignacionActiva.admision.paciente.apellido}
                  else
                    | N/A
                td.py-3.px-4.whitespace-nowrap.text-sm.flex.space-x-2.justify-center
                  a(href=`/camas/editar/${cama.id_cama}`, class="text-indigo-600 hover:text-indigo-800 font-medium transition-colors") Editar
                  form(action=`/camas/eliminar/${cama.id_cama}`, method="POST", onsubmit="return confirm('¿Está seguro de eliminar esta cama? Esto no es posible si está asignada.');", style="display:inline-block;")
                    button(type="submit", class="text-red-600 hover:text-red-800 font-medium transition-colors") Eliminar
>>>>>>> aa8027501b4c073def9c20a08ba1531f326b1aa0
